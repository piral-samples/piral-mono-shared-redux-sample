{"version":3,"sources":["webpack:///./src/layout.tsx","webpack:///./src/store.ts","webpack:///./src/renderPiral.tsx"],"names":["errors","not_found","className","to","layout","ErrorInfo","props","SwitchErrorInfo","DashboardContainer","children","DashboardTile","columns","rows","Layout","Notifications","Menu","type","MenuContainer","collapsed","setCollapsed","onClick","MenuItem","NotificationsHost","NotificationsToast","options","onClose","title","watchFetchDog","fetchDogAsync","dogInitialState","url","loading","error","dogReducer","state","action","console","log","requestDogSuccess","data","message","fetch","then","res","json","store","extensions","addModule","id","reducerMap","dogs","sagas","actions","fetchDog","instance","createInstance","plugins","globalStore","globalStoreActions","create","errorComponents","components","routes","Dashboard","requestPilets","items","Piral"],"mappings":"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","file":"cb5017.js","sourcesContent":["import * as React from \"react\";\nimport {\n  ComponentsState,\n  ErrorComponentsState,\n  Menu,\n  Notifications,\n  SwitchErrorInfo,\n  MenuItemProps,\n} from \"piral\";\nimport { Link } from \"react-router-dom\";\n\nconst MenuItem: React.FC<MenuItemProps> = ({ children }) => (\n  <li className=\"nav-item\">{children}</li>\n);\n\nexport const errors: Partial<ErrorComponentsState> = {\n  not_found: () => (\n    <div>\n      <p className=\"error\">\n        Could not find the requested page. Are you sure it exists?\n      </p>\n      <p>\n        Go back <Link to=\"/\">to the dashboard</Link>.\n      </p>\n    </div>\n  ),\n};\n\nexport const layout: Partial<ComponentsState> = {\n  ErrorInfo: (props) => (\n    <div>\n      <h1>Error</h1>\n      <SwitchErrorInfo {...props} />\n    </div>\n  ),\n  DashboardContainer: ({ children }) => (\n    <div>\n      <h1>Hello, world!</h1>\n      <p>Welcome to your new microfrontend app shell, built with:</p>\n      <div className=\"tiles\">{children}</div>\n    </div>\n  ),\n  DashboardTile: ({ columns, rows, children }) => (\n    <div className={`tile cols-${columns} rows-${rows}`}>{children}</div>\n  ),\n  Layout: ({ children }) => (\n    <div>\n      <Notifications />\n      <Menu type=\"general\" />\n      <div className=\"container\">{children}</div>\n    </div>\n  ),\n  MenuContainer: ({ children }) => {\n    const [collapsed, setCollapsed] = React.useState(true);\n    return (\n      <header>\n        <nav className=\"navbar navbar-light navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\">\n          <div className=\"container\">\n            <Link className=\"navbar-brand\" to=\"/\">\n              Piral\n            </Link>\n            <button\n              aria-label=\"Toggle navigation\"\n              type=\"button\"\n              onClick={() => setCollapsed(!collapsed)}\n              className=\"navbar-toggler mr-2\"\n            >\n              <span className=\"navbar-toggler-icon\" />\n            </button>\n            <div\n              className={`collapse navbar-collapse d-sm-inline-flex flex-sm-row-reverse ${\n                collapsed ? \"\" : \"show\"\n              }`}\n              aria-expanded={!collapsed}\n            >\n              <ul className=\"navbar-nav flex-grow\">{children}</ul>\n            </div>\n          </div>\n        </nav>\n      </header>\n    );\n  },\n  MenuItem,\n  NotificationsHost: ({ children }) => (\n    <div className=\"notifications\">{children}</div>\n  ),\n  NotificationsToast: ({ options, onClose, children }) => (\n    <div className={`notification-toast ${options.type}`}>\n      <div className=\"notification-toast-details\">\n        {options.title && (\n          <div className=\"notification-toast-title\">{options.title}</div>\n        )}\n        <div className=\"notification-toast-description\">{children}</div>\n      </div>\n      <div className=\"notification-toast-close\" onClick={onClose} />\n    </div>\n  ),\n};\n","import { createStore } from \"redux-dynamic-modules\";\nimport { getSagaExtension } from \"redux-dynamic-modules-saga\";\nimport { takeEvery, put, call } from \"redux-saga/effects\";\n\n// Reducer\nconst dogInitialState = {\n  url: \"\",\n  loading: false,\n  error: false,\n};\n\nconst dogReducer = (state = dogInitialState, action) => {\n  switch (action.type) {\n    case \"TEST\":\n      console.log(\"reducer is called\", { state });\n      return state;\n    case \"REQUESTED_DOG\":\n      return {\n        url: \"\",\n        loading: true,\n        error: false,\n      };\n    case \"REQUESTED_DOG_SUCCEEDED\":\n      return {\n        url: action.url,\n        loading: false,\n        error: false,\n      };\n    case \"REQUESTED_DOG_FAILED\":\n      return {\n        url: \"\",\n        loading: false,\n        error: true,\n      };\n    default:\n      return state;\n  }\n};\n\n// Action Creators\nconst requestDog = () => {\n  return { type: \"REQUESTED_DOG\" };\n};\n\nconst requestDogSuccess = (data) => {\n  return { type: \"REQUESTED_DOG_SUCCEEDED\", url: data.message };\n};\n\nconst requestDogError = () => {\n  return { type: \"REQUESTED_DOG_FAILED\" };\n};\n\nconst fetchDog = () => {\n  return { type: \"FETCHED_DOG\" };\n};\n\n// Sagas\nfunction* watchFetchDog() {\n  yield takeEvery(\"FETCHED_DOG\", fetchDogAsync);\n}\n\nfunction* fetchDogAsync() {\n  try {\n    yield put(requestDog());\n    const data = yield call(() => {\n      return fetch(\"https://dog.ceo/api/breeds/image/random\").then((res) =>\n        res.json()\n      );\n    });\n    yield put(requestDogSuccess(data));\n  } catch (error) {\n    yield put(requestDogError());\n  }\n}\n\nfunction getDogModule() {\n  return {\n    id: \"dogs\",\n    reducerMap: {\n      dogs: dogReducer,\n    },\n    sagas: [watchFetchDog],\n  };\n}\n\nexport interface GlobalStore {}\n\nexport const store = createStore<GlobalStore>({\n  extensions: [getSagaExtension({})],\n});\n\nexport interface GlobalStore {\n  dogs: typeof dogInitialState;\n}\n\nstore.addModule(getDogModule());\n\nexport const actions = {\n  fetchDog,\n};\n","import * as React from \"react\";\nimport {\n  PiralPlugin,\n  createInstance,\n  Piral,\n  createStandardApi,\n  Dashboard,\n} from \"piral\";\nimport { layout, errors } from \"./layout\";\nimport { store, actions } from \"./store\";\n\n// change to your feed URL here (either using feed.piral.cloud or your own service)\nconst feedUrl = \"https://feed.piral.cloud/api/v1/pilet/redux-sample\";\n\ndeclare module \"piral-core/lib/types/custom\" {\n  interface PiletCustomApi extends StorePluginApi {}\n}\n\ntype SharedStore = typeof store;\ntype SharedActions = typeof actions;\n\ninterface StorePluginApi {\n  globalStore: SharedStore;\n  globalStoreActions: SharedActions;\n}\n\nfunction createStorePlugin(): PiralPlugin<StorePluginApi> {\n  return () => ({\n    globalStore: store,\n    globalStoreActions: actions,\n  });\n}\n\nconst instance = createInstance({\n  plugins: [createStorePlugin(), ...createStandardApi()],\n  state: {\n    errorComponents: errors,\n    components: layout,\n    routes: {\n      \"/\": Dashboard,\n    },\n  },\n  requestPilets() {\n    return fetch(feedUrl)\n      .then((res) => res.json())\n      .then((res) => res.items);\n  },\n});\n\nexport default () => <Piral instance={instance}></Piral>;\n"],"sourceRoot":""}